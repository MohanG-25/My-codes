class Solution {
    public int countBinarySubstrings(String s) {
        int n=s.length();
        int i=0,ans=0;
        int aZ=0,b=0;
        while(i<s.length()){
             aZ=0;
             b=0;
            if(s.charAt(i)=='0'){
                while(i<n && s.charAt(i)=='0'){
                    aZ++;
                    i++;
                }
                int j=i;
                while(j<n && s.charAt(j)=='1'){
                    b++;
                    j++;
                }
            }
            else{
                while(i<n && s.charAt(i)=='1'){
                    b++;
                    i++;
                }
                int j=i;
                while(j<n && s.charAt(j)=='0'){
                    aZ++;
                    j++;
                }
            }
            ans+=Math.min(aZ,b);
        }
        return ans;
        // The reason: It's almost completed but conseutibe 0's and 1's cant determined by this code:
        // int m=0;
        // int n=0,c=0;
        // for(int i=0;i<s.length();i++){
        //     if(s.charAt(i)=='1'){
        //         m++;
        //     }
        //     else{
        //         n++;
        //     }
        // }
        // int a=0,b=0;
        // for(int i=0;i<s.length();i++){
        //     a=0;
        //     b=0;
        //     for(int j=i+1;j<=s.length();j++){
        //         String ss=s.substring(i,j);
        //         for(int k=0;k<ss.length();k++){
        //             if(ss.charAt(k)=='1'){
        //                 a++;
        //             }
        //             else{
        //                 b++;
        //             }
        //         }
        //The reason: It's almost completed but consecutive 0's and 1's cant determined by this code:
        //         if(a==b){c++;}
        //     }
        // }
        // return c;
    }
}
